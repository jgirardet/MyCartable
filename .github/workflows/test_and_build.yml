name: test et build

on:
  # Trigger the workflow o push or pull request,
  # but only for the master
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - dev
      - master
#
#env:
#  WIN_ARTIFACT: MyCartable-Windows64
#  LINUX_ARTIFACT: MyCartable-Linux64



jobs:
  TestAndBuild:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os : [ubuntu-18.04, windows-2019]
#        os : [ubuntu-latest, ubuntu-18.04, windows-2019, windows-latest]
        python: [3.7]
    env:
      DISPLAY: ':99.0'
    steps:
    - name: Get repo
      uses: actions/checkout@v1
    - name: Setup Python ${{ matrix.python }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}
    - name: install dependencies
      run: |
        python run.py install

    - name: Linux custom installs
      if: runner.os == 'Linux'
      run: |
        sudo apt install libxkbcommon-x11-0
        /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1200x24 -ac +extension GLX
    - name: Tests python on ${{ matrix.os }}
      run: python run.py test_python
    - name: Install Qt on Linux
      if: runner.os == 'Linux'
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.14.1'
        host: 'linux'
        target: 'desktop'
    - name: Install Qt on Windows
      if: runner.os == 'Windows'
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.14.1'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_mingw73'
    - name: Tests QML on ${{ matrix.os }}
      run: python run.py test_qml_reset

    - name: Coverage on ${{ matrix.os }}
      run: |
        python run.py cov
    - name: build on ${{ matrix.os }}
      run: |
        python run.py build_binary_as_dir
    - name: test run on windows CMD
      if: runner.os == 'Windows'
      shell: cmd
      run: python run.py test_binary_as_dir
    - name: upload  on ${{ matrix.os }} binary in artifact
      uses: actions/upload-artifact@v1
      with:
        path: dist/MyCartable
        name: MyCartable-${{runner.os}}64


  Deploy:
    name: release github
    needs: TestAndBuild
    runs-on: ubuntu-18.04
#    if: ! contains(github.ref, "vrefs")
    steps:
      - name: Download windows binary
        uses: actions/download-artifact@v1
        with:
          name: MyCartable-Windows64
      - name: Download Linux binary
        uses: actions/download-artifact@v1
        with:
          name: MyCartable-Linux64
      - name: release git_hub
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "MyCartable-Linux64;MyCartable-Windows64"
          tags: true
          draft: False
          release_name: MyCartable v${{github.ref}}
          tag_name: v${{github.ref}}